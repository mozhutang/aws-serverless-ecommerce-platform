openapi: 3.0.0
info:
  title: Listings API
  version: 1.0.0
  description: API for managing property and experience listings

components:
  securitySchemes:
    CognitoAuth:
      type: apiKey
      in: header
      name: Authorization

  schemas:
    Listing:
      type: object
      properties:
        listingId:
          type: string
        listingType:
          type: string
        name:
          type: string
        address:
          type: string
        city:
          type: string
        photoAddressList:
          type: array
          items:
            type: string
        category:
          type: string
        price:
          type: number
          format: float
        calendar:
          type: array
          items:
            $ref: '#/components/schemas/CalendarEntry'
        hostInformation:
          type: string
    CalendarEntry:
      type: object
      properties:
        date:
          type: string
        available:
          type: boolean
        price:
          type: number
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
        details:
          type: string

paths:
  /listings/create:
    post:
      summary: Create a new listing.
      operationId: createListing
      security:
        - CognitoAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Listing'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /listings/get/{listingId}:
    get:
      summary: Retrieve listing information by listing ID.
      operationId: getListingById
      parameters:
        - name: listingId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /listings:
    get:
      summary: List listings with pagination and optional filters.
      operationId: listListings
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            example: 10
        - name: lastEvaluatedKey
          in: query
          required: false
          schema:
            type: string
        - name: hostId
          in: query
          required: false
          schema:
            type: string
        - name: category
          in: query
          required: false
          schema:
            type: string
        - name: sortOrder
          in: query
          required: false
          schema:
            type: string
            enum: [asc, desc]
            example: asc
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Listing'
                  lastEvaluatedKey:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                serverError:
                  summary: Internal Server Error Example
                  value:
                    message: "Internal server error"
                    code: 500
                    details: "An unexpected error occurred while processing the request."
  /listings/update/{listingId}:
    put:
      summary: Update listing information by listing ID.
      operationId: updateListing
      security:
        - CognitoAuth: []
      parameters:
        - name: listingId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Listing'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                badRequest:
                  summary: Bad Request Example
                  value:
                    message: "Invalid listing data"
                    code: 400
                    details: "The provided listing data is invalid."
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                serverError:
                  summary: Internal Server Error Example
                  value:
                    message: "Internal server error"
                    code: 500
                    details: "An unexpected error occurred while processing the request."

  /listings/delete/{listingId}:
    delete:
      summary: Delete a listing by listing ID.
      operationId: deleteListing
      security:
        - CognitoAuth: []
      parameters:
        - name: listingId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                success:
                  summary: Successful deletion
                  value:
                    message: "Listing successfully deleted."
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                badRequest:
                  summary: Invalid listing ID
                  value:
                    message: "Invalid listing ID"
                    code: 400
                    details: "The listing ID provided is not valid."
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                serverError:
                  summary: Internal Server Error Example
                  value:
                    message: "Internal server error"
                    code: 500
                    details: "An unexpected error occurred while processing the request."
  /listings/search:
    get:
      summary: Search listings with pagination and optional filters.
      operationId: searchListings
      parameters:
        - name: city
          in: query
          required: false
          schema:
            type: string
        - name: category
          in: query
          required: false
          schema:
            type: string
        - name: minPrice
          in: query
          required: false
          schema:
            type: integer
        - name: maxPrice
          in: query
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            example: 10
        - name: lastEvaluatedKey
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Listing'
                  lastEvaluatedKey:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                serverError:
                  summary: Internal Server Error Example
                  value:
                    message: "Internal server error"
                    code: 500
                    details: "An unexpected error occurred while processing the request."
